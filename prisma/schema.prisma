// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  String                @id @default(cuid())
  name                String
  email               String                @unique
  password            String
  isAdmin             Boolean               @default(false)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  enquiries           Enquiry[]
  loanApplications    LoanApplication[]
  paymentTransactions PaymentTransaction[]
  notifications       Notification[]
}

model Enquiry {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  subject   String
  message   String
  status    String   @default("Pending") // Added status
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LoanApplication {
  id              String   @id @default(cuid())
  fullName        String
  email           String
  phone           String
  pan             String
  businessName    String
  businessType    String
  yearsInBusiness Int
  annualTurnover  Float
  loanAmount      Float
  loanPurpose     String
  status          String   @default("Pending")
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PaymentTransaction {
  id                String   @id @default(cuid())
  serviceName       String
  amount            Float
  status            String
  razorpayOrderId   String
  razorpayPaymentId String
  razorpaySignature String
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Service {
  id          String  @id @default(cuid())
  name        String  @unique
  description String
  price       Float
  isFixed     Boolean @default(true) // To distinguish between fixed and dynamic services
  isActive    Boolean @default(true)
}

model Notification {
  id        String   @id @default(cuid())
  title     String
  message   String
  isRead    Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
